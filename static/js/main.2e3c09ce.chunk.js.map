{"version":3,"sources":["Components/Calendar/Notes.module.scss","Components/Calendar/Cell.module.scss","Components/Calendar/DaysGrid.module.scss","utils/dates.ts","store/dates/types.ts","store/dates/reducers.ts","store/notes/types.ts","store/notes/reducer.ts","store/index.ts","Components/Calendar/Header.tsx","Components/Calendar/Cell.tsx","Components/Calendar/DaysGrid.tsx","Components/Calendar/NoteInputs.tsx","Components/Calendar/Notes.tsx","store/notes/actions.ts","Components/Calendar/ListNotes.tsx","Components/Calendar/Calendar.tsx","store/dates/actions.ts","App.tsx","reportWebVitals.ts","index.tsx","Components/Calendar/ListNotes.module.scss","Components/Calendar/Header.module.scss"],"names":["module","exports","yearFrom","getDaysForMonth","year","month","currentMonth","moment","daysInMonth","Array","fill","reduce","days","_","currentDayIndex","dayOfWeek","clone","add","day","SET_YEAR","SET_MONTH","initialYearsState","map","yearIndex","months","monthIndex","initialCurrentDateState","datesReducer","combineReducers","years","state","action","type","currentDate","payload","REMOVE_NOTE","ADD_NOTE","CHANGE_NOTE","NOTE_COUNT","initialState","initialNotesLengthState","count","rootReducer","dates","notes","noteIndex","findIndex","note","oldNote","hour","slice","newNote","length","notesLength","Header","setMonth","setYear","isPreviousYearDisabled","isNextYearDisabled","className","style","container","yearContainer","onClick","yearPrevBtn","disabled","yearText","yearSecBtn","monthContainer","monthPrevBtn","monthText","monthSecBtn","to","notesListBtn","Cell","notesCount","useSelector","filter","cellContainer","cellDayNumber","noteLinkContainer","notesLink","notesCircle","notesValue","DaysGrid","currentYear","find","elem","index","cellsContainer","el","weeksName","gridColumnStart","undefined","cells","availableHours","console","log","formatHour","toString","NoteInputs","onChange","text","excludedHours","onChangeHour","e","Number","target","value","options","useMemo","includes","timeInput","list","id","textInput","Notes","props","params","useParams","parsedParams","Object","entries","acc","key","stringPropertiesToNumber","dispatch","useDispatch","removeNoteHandler","removeNote","changeNoteHandler","changeNote","noteContainer","noteInner","join","btnsNew","btnDelete","btnNew","btnOk","ListNotes","startDateInputRef","useRef","endDateInputRef","useState","num","setNum","setNotesValue","startDateInput","current","endDateInput","headline","inputsLine","wordFromAndTo","inputs","ref","min","max","newNotesValue","split","setFirstDay","setEndDay","setFirstMonth","setEndMonth","setFirstYear","setEndYear","replaceStartDate","replace","replaceEndDate","alert","notesArray","SetNotesValueSort","sort","prev","next","i","push","btnShow","out","notesText","notesAbsent","btnClose","Calendar","store","body","path","render","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e3c09ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"noteContainer\":\"Notes_noteContainer__1W3Lt\",\"noteInner\":\"Notes_noteInner__2UvqH\",\"timeInput\":\"Notes_timeInput__JPKVX\",\"textInput\":\"Notes_textInput__aM1nl\",\"btnsNew\":\"Notes_btnsNew__3lDHu\",\"btnDelete\":\"Notes_btnDelete__zwHQs\",\"btnNew\":\"Notes_btnNew__2rKLO\",\"btnOk\":\"Notes_btnOk__K3Qf4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellContainer\":\"Cell_cellContainer__2GJz0\",\"noteLinkContainer\":\"Cell_noteLinkContainer__2w7Ft\",\"notesLink\":\"Cell_notesLink__TkenB\",\"notesCircle\":\"Cell_notesCircle__3iSAm\",\"notesValue\":\"Cell_notesValue__jwMBe\",\"notesText\":\"Cell_notesText__2D617\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellsContainer\":\"DaysGrid_cellsContainer__2Qm4z\",\"weeksName\":\"DaysGrid_weeksName__2aloU\",\"cells\":\"DaysGrid_cells__1zKKh\"};","import moment from 'moment';\r\nimport { Month, Year } from 'store/dates/types';\r\n\r\nconst getDaysForMonth = (year: number, month: number) => {\r\n  const currentMonth = moment({ year, month });\r\n  const daysInMonth = currentMonth.daysInMonth();\r\n  const days = new Array(daysInMonth).fill(null).reduce(\r\n    (days, _, currentDayIndex) => [\r\n      ...days,\r\n      {\r\n        dayOfWeek: currentMonth.clone().add({ days: currentDayIndex }).day(),\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  return days;\r\n};\r\n\r\nconst getMonths = (year: number): Month[] =>\r\n  new Array(12).fill(null).map((_, monthIndex) => ({\r\n    days: getDaysForMonth(year, monthIndex),\r\n  }));\r\n\r\nexport const createDates = (yearFrom: number, yearTo: number) => {\r\n  const years = new Array(yearTo - yearFrom)\r\n    .fill(null)\r\n    .map<Year>((_, yearIndex) => ({\r\n      months: getMonths(yearFrom + yearIndex),\r\n      year: yearFrom + yearIndex,\r\n    }));\r\n\r\n  return years;\r\n};\r\n\r\nexport const stringPropertiesToNumber = (params: object) =>\r\n  Object.entries(params).reduce(\r\n    (acc, [key, value]) => ({ ...acc, [key]: Number(value) }),\r\n    {},\r\n  );\r\n","export const SET_DATES = 'SET_DATES';\r\nexport const SET_WEEKS = 'SET_WEEKS';\r\nexport const SET_YEAR = 'SET_YEAR';\r\nexport const SET_MONTH = 'SET_MONTH';\r\n\r\nexport interface Day {\r\n  dayOfWeek: number;\r\n}\r\n\r\nexport interface Month {\r\n  days: Day[];\r\n}\r\n\r\nexport interface Year {\r\n  months: Month[];\r\n  year: number;\r\n}\r\n\r\nexport type YearsState = Year[];\r\n\r\nexport interface CurrentDate {\r\n  year: number;\r\n  month: number;\r\n  day: number;\r\n}\r\n\r\nexport interface DatesState {\r\n  years: YearsState;\r\n  currentDate: CurrentDate;\r\n}\r\n\r\ninterface SetDateAction {\r\n  type: typeof SET_DATES;\r\n  payload: Year[];\r\n}\r\n\r\ninterface UpdateCurrentDateAction {\r\n  type: typeof SET_YEAR | typeof SET_MONTH;\r\n  payload: number;\r\n}\r\n\r\nexport type YearsActionTypes = SetDateAction;\r\nexport type CurrentDateActionTypes = UpdateCurrentDateAction;\r\n","import { combineReducers } from 'redux';\r\nimport { createDates } from 'utils/dates';\r\nimport {\r\n  CurrentDate,\r\n  YearsState,\r\n  CurrentDateActionTypes,\r\n  YearsActionTypes,\r\n  SET_YEAR,\r\n  SET_MONTH,\r\n} from './types';\r\n\r\nconst initialYearsState: YearsState = createDates(2021, 2032);\r\n\r\nconst initialCurrentDateState: CurrentDate = {\r\n  day: 0,\r\n  month: 0,\r\n  year: 2021,\r\n};\r\n\r\nconst yearsReducer = (\r\n  state: YearsState = initialYearsState,\r\n  action: YearsActionTypes,\r\n) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst currentDateReducer = (\r\n  state: CurrentDate = initialCurrentDateState,\r\n  action: CurrentDateActionTypes,\r\n) => {\r\n  switch (action.type) {\r\n    case SET_YEAR:\r\n      return {\r\n        ...state,\r\n        year: state.year + action.payload,\r\n      };\r\n    case SET_MONTH:\r\n      return {\r\n        ...state,\r\n        month: state.month + action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const datesReducer = combineReducers({\r\n  years: yearsReducer,\r\n  currentDate: currentDateReducer,\r\n});\r\n","export const REMOVE_NOTE = 'REMOVE_NOTE';\r\nexport const ADD_NOTE = 'ADD_NOTE';\r\nexport const CHANGE_NOTE = 'CHANGE_NOTE';\r\nexport const NOTE_COUNT ='NOTE_COUNT';\r\n\r\nexport interface Note {\r\n  year: number;\r\n  month: number;\r\n  day: number;\r\n  hour: number | null;\r\n  text: string;\r\n  count: number;\r\n}\r\nexport type NotesState = Note[];\r\n\r\nexport interface NotesLength {\r\n  count: any;\r\n}\r\n\r\ninterface AddNoteAction {\r\n  type: typeof ADD_NOTE;\r\n  payload: Note;\r\n}\r\ninterface NoteCountAction {\r\n  type: typeof NOTE_COUNT;\r\n  payload: number;\r\n}\r\ninterface ChangeNoteAction {\r\n  type: typeof CHANGE_NOTE;\r\n  payload: {\r\n    newNote: Note;\r\n    oldNote: Note;\r\n  };\r\n}\r\ninterface RemoveNoteAction {\r\n  type: typeof REMOVE_NOTE;\r\n  payload: number;\r\n}\r\n\r\nexport type NotesActionTypes =\r\n  | AddNoteAction\r\n  | RemoveNoteAction\r\n  | NoteCountAction\r\n  | ChangeNoteAction;\r\n","\r\nimport {\r\n  ADD_NOTE,\r\n  CHANGE_NOTE,\r\n  NotesActionTypes,\r\n  NotesState,\r\n  REMOVE_NOTE,\r\n  NOTE_COUNT,\r\n  NotesLength\r\n} from './types';\r\n\r\nconst initialState: NotesState = [];\r\nconst initialNotesLengthState: NotesLength = {\r\n  count: 0\r\n};\r\n\r\nexport const NotesLengthReducer = (\r\n  state: NotesLength =  initialNotesLengthState,\r\n  action: NotesActionTypes\r\n)=>{\r\n  switch(action.type){\r\n    case NOTE_COUNT:\r\n      return{\r\n        ...state, \r\n      count: state.count + action.payload,\r\n    }\r\n    default:\r\n        return state;\r\n  }\r\n  }\r\n\r\nexport const notesReducer = (\r\n  state: NotesState = initialState,\r\n  action: NotesActionTypes,\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_NOTE:\r\n      return [...state, action.payload];\r\n    case CHANGE_NOTE:\r\n      const noteIndex = state.findIndex(\r\n        (note) =>\r\n          note.year === action.payload.oldNote.year &&\r\n          note.month === action.payload.oldNote.month &&\r\n          note.day === action.payload.oldNote.day &&\r\n          note.hour === action.payload.oldNote.hour,\r\n      );\r\n      return [\r\n        ...state.slice(0, noteIndex),\r\n        action.payload.newNote,\r\n        ...state.slice(noteIndex + 1, state.length),\r\n      ];\r\n    case REMOVE_NOTE:\r\n      return [\r\n        ...state.slice(0, action.payload),\r\n        ...state.slice(action.payload + 1, state.length),\r\n      ];\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n","import { Action, combineReducers } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { datesReducer } from './dates/reducers';\r\nimport { notesReducer, NotesLengthReducer } from './notes/reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  dates: datesReducer,\r\n  notes: notesReducer,\r\n  notesLength: NotesLengthReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import { FC } from 'react';\r\nimport style from './Header.module.scss';\r\nimport { DatesState } from 'store/dates/types';\r\nimport { CurrentDate } from './Calendar';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface DateProps {\r\n  setMonth: (month: number) => void;\r\n  setYear: (year: number) => void;\r\n  months: string[];\r\n  dates: DatesState;\r\n  currentDate: CurrentDate;\r\n}\r\n\r\nexport const Header: FC<DateProps> = ({\r\n  setMonth,\r\n  setYear,\r\n  currentDate,\r\n  months,\r\n  dates,\r\n}) => {\r\n  const nextMonth = () => setMonth(1);\r\n  const previousMonth = () => setMonth(-1);\r\n  const nextYear = () => setYear(1);\r\n  const previousYear = () => setYear(-1);\r\n  const isPreviousYearDisabled = currentDate.year === dates.years[0].year;\r\n  const isNextYearDisabled =\r\n    currentDate.year === dates.years[dates.years.length - 1].year;\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.yearContainer}>\r\n        <button\r\n          onClick={previousYear}\r\n          className={style.yearPrevBtn}\r\n          disabled={isPreviousYearDisabled}\r\n        ></button>\r\n        <span className={style.yearText}>{currentDate.year}</span>\r\n        <button\r\n          onClick={nextYear}\r\n          className={style.yearSecBtn}\r\n          disabled={isNextYearDisabled}\r\n        ></button>\r\n      </div>\r\n      <div className={style.monthContainer}>\r\n        <button\r\n          className={style.monthPrevBtn}\r\n          onClick={previousMonth}\r\n          disabled={currentDate.month === 0}\r\n        ></button>\r\n        <span className={style.monthText}>{months[currentDate.month]}</span>\r\n        <button\r\n          className={style.monthSecBtn}\r\n          onClick={nextMonth}\r\n          disabled={currentDate.month === 11}\r\n        ></button>\r\n      </div>\r\n      <NavLink to=\"/noteslist\">\r\n        <button className={style.notesListBtn}>Notes List</button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from 'react';\r\nimport style from './Cell.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from 'store';\r\n\r\ninterface DayOfWeek {\r\n  month: number;\r\n  year: number;\r\n  day: number;\r\n}\r\n\r\nexport const Cell: FC<DayOfWeek> = ({ day, year, month }) => {\r\n  const notes = useSelector((state: RootState) => state.notes);\r\n\r\n  let notesCount = notes.filter((note) => {\r\n    return note.day === day && note.month === month && note.year === year;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={style.cellContainer}>\r\n        <div className={style.cellDayNumber}>{day}</div>\r\n        <NavLink\r\n          to={`/notes/${year}/${month}/${day}`}\r\n          className={style.noteLinkContainer}\r\n        >\r\n          {notesCount.length === 0 ? (\r\n            <div className={style.notesLink}>no notes</div>\r\n          ) : (\r\n            <div className={style.notesLink}>\r\n              <div className={style.notesCircle}></div>\r\n              <div className={style.notesValue}>{notesCount.length}</div>\r\n            </div>\r\n          )}\r\n        </NavLink>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { FC } from 'react';\r\nimport { DatesState } from 'store/dates/types';\r\nimport { Cell } from './Cell';\r\nimport style from './DaysGrid.module.scss';\r\n\r\ninterface CellGridProps {\r\n  dates: DatesState;\r\n  currentDate: {\r\n    year: number;\r\n    month: number;\r\n    day: number;\r\n  };\r\n}\r\n\r\nexport const DaysGrid: FC<CellGridProps> = ({ dates, currentDate }) => {\r\n  const currentYear = dates.years.find((elem) => {\r\n    return elem.year === currentDate.year;\r\n  });\r\n  const currentMonth = currentYear?.months.find((elem, index) => {\r\n    return index === currentDate.month;\r\n  });\r\n  return (\r\n    <>\r\n      <div className={style.cellsContainer}>\r\n        {[\r\n          'Monday',\r\n          'Tuesday',\r\n          'Wednesday',\r\n          'Thursday',\r\n          'Friday',\r\n          'Saturday',\r\n          'Sunday',\r\n        ].map((el) => {\r\n          return <div className={style.weeksName}>{el}</div>;\r\n        })}\r\n        {currentMonth!.days.map((day, index) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                gridColumnStart: index === 0 ? day.dayOfWeek : undefined,\r\n              }}\r\n            >\r\n              <div className={style.cells}>\r\n                <Cell\r\n                  key={index}\r\n                  year={currentDate.year}\r\n                  month={currentDate.month}\r\n                  day={index + 1}\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { FC, useMemo } from 'react';\r\nimport style from './Notes.module.scss';\r\n\r\nexport interface NotesInputProps {\r\n  onChange: (options: { text?: string; hour?: number }) => void;\r\n  text: string;\r\n  hour: number | null;\r\n  excludedHours?: (number | null)[];\r\n}\r\n\r\nconst availableHours = new Array(13).fill(null).map((_, index) => index + 8);\r\nconsole.log(availableHours);\r\n\r\nconst formatHour = (hour: number) =>\r\n  `${hour.toString().length === 1 ? `0${hour}` : hour}:00`;\r\nexport const NoteInputs: FC<NotesInputProps> = ({\r\n  hour,\r\n  onChange,\r\n  text,\r\n  excludedHours = [],\r\n}) => {\r\n  const onChangeHour = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange({ hour: Number(e.target.value.slice(0, 2)) });\r\n\r\n  const onChangeText = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange({ text: e.target.value });\r\n\r\n  const filteredHours = useMemo(\r\n    () => availableHours.filter((hour) => !excludedHours.includes(hour)),\r\n    [excludedHours],\r\n  );\r\n\r\n  const options = filteredHours.map((hour) => (\r\n    <option key={hour} value={formatHour(hour)} />\r\n  ));\r\n  console.log(onChangeHour);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"time\"\r\n        className={style.timeInput}\r\n        list=\"timeList\"\r\n        value={hour ? formatHour(hour) : undefined}\r\n        onChange={onChangeHour}\r\n      ></input>\r\n      <datalist id=\"timeList\">{options}</datalist>\r\n      <div>\r\n        {hour ? (\r\n          <input\r\n            className={style.textInput}\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={onChangeText}\r\n          ></input>\r\n        ) : undefined}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useMemo } from 'react';\r\nimport style from './Notes.module.scss';\r\nimport { NoteInputs, NotesInputProps } from './NoteInputs';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from 'store';\r\nimport { addNote, removeNote, changeNote } from 'store/notes/actions';\r\nimport { stringPropertiesToNumber } from 'utils/dates';\r\nimport { Note } from 'store/notes/types';\r\n\r\nexport interface NotesData {\r\n  year: string;\r\n  month: string;\r\n  day: string;\r\n}\r\n\r\nexport const Notes: FC = (props) => {\r\n  const params = useParams<NotesData>();\r\n  const parsedParams = useMemo(\r\n    () =>\r\n      stringPropertiesToNumber(params) as Pick<Note, 'year' | 'month' | 'day'>,\r\n    [params],\r\n  );\r\n  const notes = useSelector((state: RootState) =>\r\n    state.notes.filter(\r\n      (note) =>\r\n        note.year === parsedParams.year &&\r\n        note.month === parsedParams.month &&\r\n        note.day === parsedParams.day,\r\n    ),\r\n  );\r\n  const dispatch = useDispatch();\r\n  const addNoteHandler = () => {\r\n    dispatch(\r\n      addNote({\r\n        ...parsedParams,\r\n        hour: null,\r\n        text: '',\r\n        count: 0,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const removeNoteHandler = (index: number) => dispatch(removeNote(index));\r\n  const removeLastNoteHandler = () => {\r\n    removeNoteHandler(notes.length - 1);\r\n  };\r\n  const changeNoteHandler = (newNote: Note, oldNote: Note) =>\r\n    dispatch(changeNote(newNote, oldNote));\r\n  return (\r\n    <div className={style.noteContainer}>\r\n      <div className={style.noteInner}>\r\n        <div>\r\n          <form>\r\n            {notes.map(({ year, month, day, hour, text, count }) => {\r\n              const excludedHours = notes.map((note) => note.hour);\r\n              const onChange: NotesInputProps['onChange'] = (options) => {\r\n                changeNoteHandler(\r\n                  { year, month, day, hour, text, ...options, count },\r\n                  { year, month, day, hour, text, count },\r\n                );\r\n              };\r\n              return (\r\n                <div key={[year, month, day, hour, count].join()}>\r\n                  <NoteInputs\r\n                    hour={hour}\r\n                    text={text}\r\n                    onChange={onChange}\r\n                    excludedHours={excludedHours}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </form>\r\n        </div>\r\n        <div className={style.btnsNew}>\r\n          <div>\r\n            {notes.length > 0 ? (\r\n              <button\r\n                onClick={removeLastNoteHandler}\r\n                className={style.btnDelete}\r\n              >\r\n                Delete\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n          <button onClick={addNoteHandler} className={style.btnNew}>\r\n            New note\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <NavLink to=\"\">\r\n            <button className={style.btnOk}>OK</button>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  ADD_NOTE,\r\n  CHANGE_NOTE,\r\n  Note,\r\n  NotesActionTypes,\r\n  REMOVE_NOTE,\r\n  NOTE_COUNT,\r\n  NotesLength,\r\n} from './types';\r\n\r\nexport const addNote = (note: Note): NotesActionTypes => ({\r\n  type: ADD_NOTE,\r\n  payload: note,\r\n});\r\n\r\nexport const checkNotesLength = (note: number):  NotesActionTypes => ({\r\n    type: NOTE_COUNT,\r\n    payload: note,\r\n});\r\nexport const changeNote = (newNote: Note, oldNote: Note): NotesActionTypes => ({\r\n  type: CHANGE_NOTE,\r\n  payload: { newNote, oldNote },\r\n});\r\n\r\nexport const removeNote = (index: number): NotesActionTypes => ({\r\n  type: REMOVE_NOTE,\r\n  payload: index,\r\n});\r\n","import React, { FC, useRef, useState } from 'react';\r\nimport style from './ListNotes.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from 'store';\r\nimport { NotesState } from 'store/notes/types';\r\n\r\nexport const ListNotes: FC = () => {\r\n  const startDateInputRef = useRef<HTMLInputElement>(null);\r\n  const endDateInputRef = useRef<HTMLInputElement>(null);\r\n  const notes = useSelector((state: RootState) => state.notes);\r\n  const [num, setNum] = useState(['']);\r\n  const [notesValue, setNotesValue] = useState<NotesState>([]);\r\n\r\n  const startDateInput = () => {\r\n    if (!startDateInputRef.current) return;\r\n    const firstDate = startDateInputRef.current.value;\r\n    return firstDate;\r\n  };\r\n  const endDateInput = () => {\r\n    if (!endDateInputRef.current) return;\r\n    const endDate = endDateInputRef.current.value;\r\n    return endDate;\r\n  };\r\n\r\n  const setFirstYear = () => startDateInput()?.slice(0, 4);\r\n  const setFirstMonth = () => {\r\n    if (startDateInput()?.slice(5, 7).split('')[0] === '0') {\r\n      return startDateInput()?.slice(5, 7).split('')[1];\r\n    }\r\n    return startDateInput()?.slice(5, 7);\r\n  };\r\n  const setFirstDay = () => {\r\n    if (startDateInput()?.slice(8, 10).split('')[0] === '0') {\r\n      return startDateInput()?.slice(8, 10).split('')[1];\r\n    }\r\n    return startDateInput()?.slice(8, 10);\r\n  };\r\n\r\n  const setEndYear = () => endDateInput()?.slice(0, 4);\r\n  const setEndMonth = () => {\r\n    if (endDateInput()?.slice(5, 7).split('')[0] === '0') {\r\n      return endDateInput()?.slice(5, 7).split('')[1];\r\n    }\r\n    return endDateInput()?.slice(5, 7);\r\n  };\r\n  const setEndDay = () => {\r\n    if (endDateInput()?.slice(8, 10).split('')[0] === '0') {\r\n      return endDateInput()?.slice(8, 10).split('')[1];\r\n    }\r\n    return endDateInput()?.slice(8, 10);\r\n  };\r\n\r\n  let showBtn = () => {\r\n    const newNotesValue = notes.filter((note) => {\r\n      return (\r\n        note.day >= Number(setFirstDay()) &&\r\n        note.day <= Number(setEndDay()) &&\r\n        note.month >= Number(setFirstMonth()) - 1 &&\r\n        note.month <= Number(setEndMonth()) - 1 &&\r\n        note.year >= Number(setFirstYear()) &&\r\n        note.year <= Number(setEndYear())\r\n      );\r\n    });\r\n    setNotesValue(newNotesValue);\r\n    const replaceStartDate = Number(startDateInput()?.replace(/\\D+/g, ''));\r\n    const replaceEndDate = Number(endDateInput()?.replace(/\\D+/g, ''));\r\n    if (startDateInput() === '') {\r\n      alert('please set start date!');\r\n    } else if (endDateInput() === '') {\r\n      alert('Please set end date!');\r\n    } else if (replaceStartDate > replaceEndDate) {\r\n      alert(`Start date can't be older then end date!`);\r\n    }\r\n    const notesArray = [];\r\n    const SetNotesValueSort = newNotesValue.sort(\r\n      (prev, next) => prev.day - next.day,\r\n    );\r\n    for (let i = 0; i < SetNotesValueSort.length; i++) {\r\n      notesArray.push(\r\n        `${SetNotesValueSort[i].year}.${\r\n          SetNotesValueSort[i].month + 1 < 10\r\n            ? `0${SetNotesValueSort[i].month + 1}`\r\n            : SetNotesValueSort[i].month + 1\r\n        }.${\r\n          SetNotesValueSort[i].day + 1 < 10\r\n            ? `0${SetNotesValueSort[i].day + 1}`\r\n            : SetNotesValueSort[i].day + 1\r\n        } - ${SetNotesValueSort[i].text}`,\r\n      );\r\n      setNum(notesArray);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.container}>\r\n        <div className={style.headline}>Notes</div>\r\n        <div className={style.inputsLine}>\r\n          <div className={style.wordFromAndTo}>From</div>\r\n          <input\r\n            type=\"date\"\r\n            className={style.inputs}\r\n            ref={startDateInputRef}\r\n            min=\"2021-01-01\"\r\n            max=\"2031-12-31\"\r\n          ></input>\r\n          <div className={style.wordFromAndTo}>To</div>\r\n          <input\r\n            type=\"date\"\r\n            className={style.inputs}\r\n            ref={endDateInputRef}\r\n            min=\"2021-01-01\"\r\n            max=\"2031-12-31\"\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <button onClick={showBtn} className={style.btnShow}>\r\n            Show\r\n          </button>\r\n        </div>\r\n        <div className={style.out} id=\"out\"></div>\r\n        <div className={style.out}>\r\n          {!notesValue.length ? (\r\n            <div className={style.notesAbsent}>no notes!</div>\r\n          ) : (\r\n            num.map((el) => {\r\n              return <div className={style.notesText}>{el}</div>;\r\n            })\r\n          )}\r\n        </div>\r\n        <NavLink to=\"\">\r\n          <button className={style.btnClose}>Close</button>\r\n        </NavLink>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from 'store';\r\nimport { Header } from './Header';\r\nimport { DaysGrid } from './DaysGrid';\r\nimport style from './Header.module.scss';\r\nimport { Route } from 'react-router-dom';\r\nimport { Notes } from './Notes';\r\nimport { setMonth, setYear } from 'store/dates/actions';\r\nimport { ListNotes } from 'Components/Calendar/ListNotes';\r\n\r\nexport interface CurrentDate {\r\n  year: number;\r\n  month: number;\r\n  day: number;\r\n}\r\n\r\nexport const Calendar: FC = (props) => {\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  const dates = useSelector((store: RootState) => store.dates);\r\n  const dispatch = useDispatch();\r\n  const _setYear = (year: number) => dispatch(setYear(year));\r\n  const _setMonth = (month: number) => dispatch(setMonth(month));\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        setMonth={_setMonth}\r\n        setYear={_setYear}\r\n        months={months}\r\n        dates={dates}\r\n        currentDate={dates.currentDate}\r\n      />\r\n      <div className={style.body}>\r\n        <DaysGrid dates={dates} currentDate={dates.currentDate} />\r\n      </div>\r\n      <Route path=\"/notes/:year/:month/:day\" render={() => <Notes />} />\r\n      <Route path=\"/noteslist\" render={() => <ListNotes />} />\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  SET_DATES,\r\n  Year,\r\n  SET_YEAR,\r\n  SET_MONTH,\r\n  YearsActionTypes,\r\n  CurrentDateActionTypes,\r\n} from './types';\r\n\r\nexport const setDates = (dates: Year[]): YearsActionTypes => ({\r\n  type: SET_DATES,\r\n  payload: dates,\r\n});\r\n\r\nexport const setYear = (year: number): CurrentDateActionTypes => ({\r\n  type: SET_YEAR,\r\n  payload: year,\r\n});\r\n\r\nexport const setMonth = (month: number): CurrentDateActionTypes => ({\r\n  type: SET_MONTH,\r\n  payload: month,\r\n});\r\n","import React from 'react';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { rootReducer } from './store';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { Calendar } from './Components/Calendar/Calendar';\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware));\r\n\r\nconst store = createStore(rootReducer, composedEnhancer);\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <Calendar />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ListNotes_container__3MYNZ\",\"headline\":\"ListNotes_headline__1EzGW\",\"inputsLine\":\"ListNotes_inputsLine__DVBBV\",\"wordFromAndTo\":\"ListNotes_wordFromAndTo__xoLpx\",\"inputs\":\"ListNotes_inputs__lCmn2\",\"btnShow\":\"ListNotes_btnShow__1Xbst\",\"btnClose\":\"ListNotes_btnClose__Rp4-8\",\"out\":\"ListNotes_out__188JX\",\"notesAbsent\":\"ListNotes_notesAbsent__22S01\",\"notesText\":\"ListNotes_notesText__1oDas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Header_body__3a-YA\",\"container\":\"Header_container__k3cwm\",\"yearContainer\":\"Header_yearContainer__1Cbfm\",\"yearPrevBtn\":\"Header_yearPrevBtn__1AhMS\",\"yearSecBtn\":\"Header_yearSecBtn__3YWMK\",\"yearText\":\"Header_yearText__3hQoq\",\"monthContainer\":\"Header_monthContainer__2VQml\",\"monthPrevBtn\":\"Header_monthPrevBtn__LIAQL\",\"monthSecBtn\":\"Header_monthSecBtn__1hXXJ\",\"monthText\":\"Header_monthText__86J0H\",\"notesListBtn\":\"Header_notesListBtn__zCE98\"};"],"sourceRoot":""}